<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Settings</title>
</head>
<body>
    <h1>Settings</h1>

    <html>
  <head>
    <meta charset="utf-8" />
    <script src="https://unpkg.com/pdf-lib@1.4.0"></script>
    <script src="https://unpkg.com/downloadjs@1.4.7"></script>
    <link href="/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet">
  </head>

  <body>
    <p>Click the button to modify an existing PDF document with <code>pdf-lib</code></p>
    <button onclick="modifyPdf()">Modify PDF</button>
    <p class="small">(Your browser will download the resulting file)</p>
    <input type="file" hidden id="myfile" name="image">
    <button onclick="sayHello()">hi</button>


  </body>

  <script>

function sayHello(){
  console.log("hi");
}

    const { degrees, PDFDocument, rgb, StandardFonts } = PDFLib

    async function modifyPdf() {

      console.log("called");
      // Fetch an existing PDF document
      const url = 'https://blockstamp.s3.amazonaws.com/1608630435e6d96046cc7a02781a75fe'
  		const existingPdfBytes = await fetch(url).then(res => res.arrayBuffer())

      // Load a PDFDocument from the existing PDF bytes
      const pdfDoc = await PDFDocument.load(existingPdfBytes)
      
      // Embed the Helvetica font
      const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica)

      // Get the first page of the document
      const pages = pdfDoc.getPages()
      const firstPage = pages[0]

      // Get the width and height of the first page
      const { width, height } = firstPage.getSize()

      // Draw a string of text diagonally across the first page
      firstPage.drawText('This document digitally signed by' + ' User Name', {
        x: 5,
        y: height-25,
        size: 10,
        font: helveticaFont,
        color: rgb(0, 0, 0),
        // rotate: degrees(-45),
      })
      var time = Date.now().toString();
      firstPage.drawText(time, {
        x: 5,
        y: height-40,
        size: 10,
        font: helveticaFont,
        color: rgb(0, 0, 0),
        // rotate: degrees(-45),
      })
      firstPage.drawText('somehash', {
        x: 5,
        y: height-55,
        size: 10,
        font: helveticaFont,
        color: rgb(0, 0, 0),
        // rotate: degrees(-45),
      })

      // Serialize the PDFDocument to bytes (a Uint8Array)
      const pdfBytes = await pdfDoc.save()

      console.log("pdfBytes");
      console.log(pdfBytes);

      var arrayBuffer = pdfBytes.buffer;
      const newFileAfterConvert = convertToFile(arrayBuffer, "NEW_Filename");
      console.log(newFileAfterConvert);

			// Trigger the browser to download the PDF document
      download(pdfBytes, "pdf-lib_modification_example.pdf", "application/pdf");
    }


    function convertToFile(buffer, filename){
    const blob = new Blob([buffer], { type: 'application/octet-stream' });
    return new File([blob], filename, { type: 'application/pdf' });
    };

  </script>
</html>

</body>
</html>